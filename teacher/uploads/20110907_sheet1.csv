"学籍番号","提出日時","（必須）本日の授業に関する質問を書け。質問が全く無い場合は本日の講義の要点を１００字程度で書け。項目の箇条書きではなく、文章形式で書くこと。また、途中に改行を含めないこと。","中西からの回答","（選択）授業の進め方などについて、感想や意見があればどうぞ。無ければ記入不要。","中西からの回答"
"Q07033","10/29/14 21:36","コンパイラコンパイラはBNFを入力してコンパイラを生成するソフトウェア。BNFをコンパイラコンパイラに入力するとコンパイラが生成しその言語仕様のソースプログラムを実行するとオブジェクトファイルが生成される","「ソースプログラムを実行すると」という表現がおかしい。ソースは実行できないよ。","",""
"Q09082","","未回答","","",""
"Q09094","","未回答","","",""
"Q10024","10/29/14 13:01","printf文での変換指定形式の、構文図で”フラグ”だけ矢印の方向が逆なのはどういう意味ですか?","よく見つけましたね。フラグ指定子は複数個を指定できるからです。詳しくはC言語のきちんとした本をどうぞ。","",""
"Q10042","10/29/14 13:12","BNFによる構文定義を入力しそこから構文解析プログラムを作成するソフトウェアをコンパイラコンパイラもしくはパーザ・ジェネレータといいyaccやbison等がある。","OK","",""
"Q11005","10/30/14 0:02","構文図を書くときにどの括弧を図に書くのかがわかりません。if文の時は()を構文図に書いていましたが先週提出したプリントの問題では()は構文図に書かないのが正解だったのでどう違うのか教えてください。","if文の丸括弧は終端記号だから書きます。いっぽう、拡張BNFの丸括弧は、単にBNF表現を短く書くための便法（約束）なので、終端記号でも非終端記号でもありません。だから構文図には現れない。","",""
"Q11020","","未回答","","",""
"Q11032","","未回答","","",""
"Q11035","","未回答","","",""
"Q11049","10/29/14 10:46","構文木を簡素化したものを、抽象構文木といい、内部節点に終端記号を書く。抽象構文木の数式の記法は中置記法、前置記法、後置記法がある","OK","",""
"Q11069","10/28/14 21:52","コンパイラを作成するための共通基盤として「LLVM(Low Level Virtual Machine:低水準仮想機械)」というものが存在する。このLLVMは言語やアーキテクチャから独立した中間表現を作成し、様々なアーキテクチャのコード生成が行える。例えばC言語で書かれた物をIntel x86 CPUで動かそうとするとき、このLLVMがあればx86 CPUに合わせたコード生成が可能である。その際アセンブリ言語で出てきた「Store」や「Call」等が使われる。","OK","",""
"Q11091","10/28/14 17:18","抽象構文木は構文木の簡単化されたもので内部節点が終端記号に書き換える。普通の構文木を見たら、規則による展開のステップを詳しく知ることができる。しかし、長い構文では木も大きくなるので、描くのが困難である。これを避けるため、抽象構文を用いて表すと、式の意味もより分かりやすいだろう。","OK","",""
"Q11103","10/29/14 9:21","C言語はAdaと違いifに一番近いelseで閉じるため、あいまいという事ですが、何か不都合はありますか?","誤解があるようです。「ifに一番近いelseで閉じる」という約束（言語仕様）にして、曖昧さを回避しているのです。","",""
"Q12004","","未回答","","",""
"Q12005","10/29/14 10:31","数式の記法で前置記法や後置記法、中置記法などがありますが、これを使い分けるのはなぜですか。それぞれに特徴があるのでしょうか。","プログラム中には普通の数式（中置）で書かれるので、コンパイラが後置記法か前置記法に置き換えて、実行コードを作るのです。","",""
"Q12012","10/28/14 17:02","前置記法と中置記法と後置記法はどのような条件で使い分けされているのですか。","プログラム中には普通の数式（中置）で書かれるので、コンパイラが後置記法か前置記法に置き換えて、実行コードを作るのです。","",""
"Q12013","10/29/14 10:07","抽象構文木について、構文木とは構文解析の結果を木構造で表したものである。木の内部節点を非終端記号とし、葉を終端記号とする。そして、抽象構文木は構文木を簡素化したもので、内部節点に終端記号を書く。簡素化は、例えば括弧によるグループ化の省略があげられる。","最後の文の意味がわかりません。グループ化の括弧は拡張BNFの話なので、構文木には関係ないのですが。。。","",""
"Q12014","","未回答","","",""
"Q12016","10/28/14 15:59","BNFとEBNFの補足と、利用例について学んだ。プログラミング言語の構文定義や、通信プロトコルの定義に利用されている。通信プロトコルの場合はABNFと呼ばれる通信プロトコルの記述に便利なように拡張されたものを使用する。","OK","",""
"Q12018","10/29/14 8:45","中カッコ小カッコが終端記号に含まれない場合をもう一度詳しく教えてください","if文の丸括弧は終端記号だから書きます。いっぽう、拡張BNFの丸括弧は、単にBNF表現を短く書くための便法（約束）なので、終端記号でも非終端記号でもありません。だから構文図には現れない。","",""
"Q12020","10/29/14 13:39","後置記法の式を評価する際にスタックを用いる場合があり、被演算子の場合にはpushし演算子の場合はスタックから2つの被演算子をpopしその演算子を用いて演算子結果をpopすることで計算することができる","OK","",""
"Q12024","10/28/14 15:35","コンパイラでは字句、構文、意味解析、中間コード生成、最適化と順に処理が行わている。字句解析では文の綴り。構文解析ではプログラムが構文に従っているか。意味解析では内容に矛盾が生じていないかを調べており、混同しないように注意が必要。","OK","",""
"Q12025","","未回答","","",""
"Q12029","","未回答","","",""
"Q12033","","未回答","","",""
"Q12034","","未回答","","",""
"Q12036","","未回答","","",""
"Q12037","","未回答","","",""
"Q12038","","未回答","","",""
"Q12039","","未回答","","",""
"Q12040","10/29/14 21:12","C言語はelseの構文定義が曖昧とありますがなぜAdaのようにifをend if で閉じる構文規則にしないのですか?","1970年からの歴史があるのでいまさら言語仕様を変えられない、という事情でしょう。","",""
"Q12041","10/28/14 17:21","構文木を視覚化したものを構文図といい、終端のみを記述することで簡素化したものを抽象構文図という。また、木構造を記述する際、行きがけ順で読み込む場合を前置記法、帰りがけ順で読み込む場合を後置記法という。","OK","",""
"Q12042","10/28/14 17:34","構造木で行きがけ順で読み出すと前置記法を実現でき。通りがけ順で読み出すと中置記法で帰りがけ順で読み出すと後置記法を実現できる。また式の値を計算することを評価するという。","OK","",""
"Q12043","10/28/14 15:53","なぜ、中値記法、前置記法、後置記法という3つの記法があるのでしょうか。","プログラム中には普通の数式（中置）で書かれるので、コンパイラが後置記法か前置記法に置き換えて、実行コードを作るのです。","",""
"Q12048","10/29/14 0:55","LLVMのような中間言語はなぜ必要なのですか?","各種のCPUアーキテクチャに対応したコード生成をするためです。","",""
"Q12049","10/29/14 9:15","ほとんどのプログラミング言語論は、bnf(バッカス・ナウア記法)で記述されており、それで書かれた言語仕様書を元にその言語の構文解析プログラム(バーサ)を自動的に作る。バーサを作るソフトも実際に存在する(yacc.GNUなど)","OK","",""
"Q12050","10/29/14 15:38","中間コードがどういうものか、具体的にいうとどのようになるのかいまいちわからなかった。どの程度まで変換したものなのでしょうか。","一例として、第5回スライドP.8を参照してください。","",""
"Q12051","10/28/14 15:32","前置記法と後置記法ではスタックを用いて式を評価できるとありますが、中置記法でも同様にスタックで評価できるのでしょうか。","できません。","",""
"Q12052","10/29/14 2:25","中間コードにLLVMを利用する利点はどのようなものがありますか?","各種のCPUアーキテクチャに対応したコード生成をするためです。","",""
"Q12054","10/29/14 11:23","構文規則での曖昧さに対して演算子の結合性や優先順位を決めておく。全ての演算子に対して優先順位をつけ、構文定義をすることで曖昧さをなくせる。抽象構文木の表記には中置記法、前置記法、後置記法がある。","OK","",""
"Q12057","10/29/14 21:30","BNF/EBNFはプログラミング言語の構文定義、通信プロトコルの定義などに使われている。コンパイラコンパイラはBNFによる構文定義を入力として構文解析ぷろぐらむを生成するソフトウェアでJavaコンパイラコンパイラはPENで利用されている。コンパイラを作成するための共通基盤のことをLLVMといい、さまざまなアーキテクチャの生成ができる。","OK","",""
"Q12058","10/29/14 10:19","構文木は木が大きくなるため、数式などでは非終端記号をなくし、終端記号を内部接点にして簡略化したものである抽象構文木を用いる。また式の値を計算することを評価するといい、抽象構文木では木を小さくすることができる。","OK","",""
"Q12060","","未回答","","",""
"Q12063","10/28/14 16:16","コンパイラコンパイラとは、BNFによる構文定義を入力として構文解析プログラムを生成するソフトウェアのことで、バーサ?ジェネレーターとも呼ばれる。バーサとは構文解析の意味である。コンパイラコンパイラにはyacc(現在はbison)がある。また、正規表現で記述されたパターンを入力として字句解析プログラムを生成するlexがある。","パーサ→パーザ(parser)","",""
"Q12064","10/28/14 21:39","通常の構文木から〈e〉や〈t〉など情報を取り除き、演算子と定数のみで表したものが抽象構文木である。構文解析の際に生成され、意味解析において、中間コード生成に使われる。分岐点に演算子、葉の部分に定数を対応させた木となり、行きがけ順や帰りがけ順で解析の仕方が変わる。","OK","",""
"Q12065","10/29/14 10:01","BNF/EBNFはSQLやXML、通信プロトコルの定義などに使われている。また、コンパイラコンパイラと言うBNFによる構文定義を入力として構文解析プログラムを生成するソフトウェアがある。これに似たものでJavaコンパイラコンパイラがあり、これは「プログラミング入門」で扱ったPENで利用されている。","OK","",""
"Q12066","","未回答","","",""
"Q12067","10/28/14 18:41","式の評価って普通の計算と何が違うのですが?_x000D_
構文木での計算方法というだけですか?","同じです。","",""
"Q12068","","未回答","","",""
"Q12070","10/29/14 15:10","抽象構文木の数式記法には中置記法、前置記法、後置記法の3種類があり、前置記法は構文木を行きがけ順で見る。これによりできる式をスタックを用いて評価することがある。被演算子のときpushし、演算子のとき2つをpopし、その結果をpushすることで行う。この時必要なスタックの高さで評価ができる。","OK","",""
"Q12071","10/28/14 15:57","中置記法と前置記法ではなく後置記法が基本情報技術者試験に毎年出題されているそうですが、それは後置記法が技術者の間で一番使われていて、それ以外はあまり利用されないということですか?","頻度というよりも、単に逆ポーランド記法（すなわち後置記法）が基本情報技術者試験のシラバスに明記されているから、それが出題されるのでしょう。","",""
"Q12072","","未回答","","",""
"Q12073","","未回答","","",""
"Q12074","","未回答","","",""
"Q12075","10/28/14 15:56","抽象構文木という構文木を簡素化したものがあり、これには内部接点に終端記号が書かれている。この抽象構文木は前置・中置・後置記法の3つの数式の記法を対応させることができる。","OK","",""
"Q12077","10/29/14 16:10","コンパイラとは字句解析?構文解析?意味解析?中間コードの作成?最適化を順に行う、字句解析によって分けられたトークンを用いて構文図を作成する。この構文図を作成する際、生成規則によって生成される構文図が複数あるという状態をあいまい性があるという。これをなくすために、それぞれのコンパイラは右結合または左結合を定めている。","最後に、オブジェクトコードを生成しますので、お忘れなく。","",""
"Q12079","10/29/14 11:55","前置記法、中置記法、後置記法におけるそれぞれのメリットとデメリットはありますか。","プログラム中には普通の数式（中置）で書かれるので、コンパイラが後置記法か前置記法に置き換えて、実行コードを作るのです。","",""
"Q12080","","未回答","","",""
"Q12081","","未回答","","",""
"Q12082","","未回答","","",""
"Q12083","","未回答","","",""
"Q12085","","未回答","","",""
"Q12086","10/29/14 15:08","拡張BNFの()や{}等の意味を覚えておく必要はありますか?(試験で問題を解く際に意味を書いてくれているかどうか)","覚えてください。","",""
"Q12087","10/28/14 22:35","構文規則では曖昧さがあるが、それに対し多くの言語では演算子の結合性や優先順位を決めC言語ではelseとifを対応させるなど、約束に従ってコンパイラを作る。曖昧さを避けるためにifは必ずend ifで閉じるAdaという言語もある。","OK","",""
"Q12093","10/29/14 23:54","授業でLLVMの紹介がありましたが、具体的にどのようにソースプログラミングを読み込んで変換し、様々なコードに対応させているのでしょうか。コードに互換性を持たせる機能が予め関数などで用意されているものなのでしょうか。","LLVMの中身までは知りません。フロントエンドにはClangというツールがあるようです。LLVMのソースコードは公開されているので、自分で調べるなり、次のサイトを見るなりしてください。http://sssslide.com/speakerdeck.com/kazegusuri/ren-jian-demowakarullvmbatukuendoru-men","",""
"Q12094","","未回答","","",""
"Q12097","","未回答","","",""
"Q12099","10/28/14 21:10","LLVMの概念図というスライドでバックエンドのところにあった欲しい実行ファイルというのは具体的にどういうものなのでしょうか。","目的のマシンアーキテクチャ用の実行コード（機械語）を生成するためのモジュール、という意味でしょう。","",""
"Q12100","10/29/14 0:21","抽象構文木を書き換えて式の評価をしていくには、スタックが使われる。後置記法の場合、pushする物が被演算子のときはpushし、演算子のときは2つpopし、その2つで演算子した結果をpushする。","OK","",""
"Q12102","","未回答","","",""
"Q12104","10/29/14 10:14","既に定義されている構文を分かりやすく別の形に書き換えたものを糖衣構文と呼ばれる。例えば、C言語において配列のアクセスを行う構文*(a + i)はa[i]と書き換えるlことができ、どちらも同じ意味を持つ。","OK","",""
"Q12106","10/29/14 10:39","どのようなプログラムを記述しても基本的にコンパイラによって構文や記述にミスがないかをチェックする。しかし、あいまいな記述に対してどのような処理をするかは様々な対処j法があり、優先順位をあらかじめ決めることや式の評価を行うことで対応している。","2つ目の文では、1つ目の文とは関係ないことを記述しているので、「しかし」という接続詞を使うべきではありません。","",""
