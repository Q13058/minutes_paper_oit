"学籍番号","提出日時","（必須）本日の授業に関する質問を書け。質問が全く無い場合は本日の講義の要点を１００字程度で書け。項目の箇条書きではなく、文章形式で書くこと。また、途中に改行を含めないこと。","中西からの回答","（選択）授業の進め方などについて、感想や意見があればどうぞ。無ければ記入不要。","中西からの回答"
"N07081","10/21/14 15:36","条件式はJavaなど言語によって異なるのでしょうか?","条件式の構文についての質問かと思います。言語によって少し異なります。","",""
"N08033","10/21/14 14:56","BNFの構文式は勝手に並び替えてはならず、曖昧性では複数の構文木ができてしまいコンパイル   結果がわからなくなる","曖昧な文法規則のままでは、コンパイラが作れません。そこに約束事が追加されるというわけです。","",""
"N09010","10/21/14 14:55","構文解析について、BNFを用いて学習した。特に今回は、算術式や代入式の構文木を書く練習をし、その後、構文図について軽く触れた。また、構文規則が曖昧であるときに生じる不都合についても学習した。","何をやったかの羅列では復習にならないからダメです。内容を説明してください。たとえば、構文木と構文図がどう違うのかなど。","",""
"N09051","10/22/14 17:32","BNFの例と何度も出ているが、毎回変化するものと見て良いのでしょうか?","式についても、いろいろな定義があるということです。","",""
"N09075","","未回答","","",""
"N10010","10/21/14 15:35","BNFの構文木を書く時に勝手に付け足さない。(「a(bc)」の時に*をつけて回答できるように変えない)","はい。","",""
"N10093","10/21/14 15:36","条件式は今回は先生が作ったものを使用しましたが、言語ごとに条件は違うのでしょうか、様々なプラットホームで稼働するJava言語の場合条件式というのは、その都度異なるものなのでしょうか。","Javaの言語仕様はきちんと決められています。","不本意にも後ろに座ってしまうことになり、残念でした。ところで、答えの解説をしていない設問がありましたがよろしかったのでしょうか","不本意とはどういう意味？
答えの解説が必要なら言ってください。"
"N10101","","未回答","","",""
"N11016","10/21/14 19:41","今日の講義ではBNFについて学習した。これは何かある式を木構造に分解してやるものである。BNFを学ぶうえで記号に意味をしっかり覚えておく必要がある。例えば=を例にあげると、=は両辺が等しいと使われたり、何かを何かに代入してやるのに使われたりするのに使われる。あとこれは具体的にC言語のコンパイラに使われている。","等号がどういう意味かは、構文規則では書けないという点が大事。
最後の「これは」って何？","",""
"N11018","10/22/14 9:47","コンパイラが行う処理の一つである構文解析とは、構文規則に従って入力された文を解析して導出の過程を明らかにし、構文木を構成することである。ただし、 A=B+C*A のような代入文の場合、構文木が複数構成されてしまうため曖昧性がある。","この式が曖昧なのではなく、例として使った文法規則が曖昧さを含むという話です。","",""
"N11023","","未回答","","",""
"N11055","10/21/14 15:03","BNFによって記された規則に則ってコンパイラは構文木を生成し構文解析を行う。またBNFには規則の定義が(容易?)より柔軟になった拡張BNFがある。本日の講義までの内容だと構文木を生成する際に曖昧さが発生する事がある。","わざと曖昧な構文規則を作って、皆さんに見せたわけです。","",""
"N11058","10/22/14 12:49","BNFの文法規則を使って、構文木を書く演習をした。拡張BNFもありいくつかの書き方がある。0回以上の繰り返しを*で、一回以上の繰り返しを+で、わかる場合は〃を省略する。","はい。","",""
"N11061","10/22/14 12:51","BNFの曖昧な表現での不都合はコンパイラエラーがおきたときのみになりますか?","曖昧な文法規則のままでは、コンパイラが作れません。そこに約束事が追加されるというわけです。","",""
"N11072","10/22/14 7:01","前回の授業が相当残ったので引き続きBNFについての内容で、BNFの算術式と文法規則に基づいた構文木の導出の仕方の講義が行われた","何をやったかの羅列では復習にならないからダメです。内容を説明してください。たとえば、構文木と構文図がどう違うのかなど。","",""
"N11076","10/21/14 16:32","普通の式のままのほうが理解しやすいと思うのですが構文木を書くメリットはなんですか?","では、与えられた式を、コンパイラのプログラムがどうやって解析すれば（どんなプログラムを書けば）よいと思いますか？","",""
"N11087","10/21/14 15:05","第4回授業ページのp19のif文の構文図において、elseの場合、文が二回実行される気がするのですがこれであっているのでしょうか?","いいえ。elseは１つだけです。また、「実行」の流れとは全く無関係です。あくまでも構文規則を書いてあるだけです。","",""
"N11105","10/21/14 15:33","今回授業を受けたときに少し暑かったのでもう少し温度を下げてほしいです。","意見は次の質問に書いてください。なお、9月の授業のときにも言いましたが、データを示すこと、学生・保護者が直接事務サイドに言うことが必要でしょう。
で、質問または講義概要はどこに？","",""
"N12001","","未回答","","",""
"N12003","10/22/14 13:03","構文木を生成する際に曖昧さが発生した場合コンパイラはどのように正しいほうを選択しますか?","曖昧な文法規則のままでは、コンパイラが作れません。","",""
"N12006","10/21/14 15:07","抽象構分木とは元のプログラムの構造をそのまま木構造で表したものを構文木という。 全ての字句が構文木に含まれる。 これらのトークンには、""(""  "")"" など後の処理に不要なものも含まれる。 これら不要なトークンを除いたものを、抽象構文木という。","今回の講義では、まだ抽象構文木を説明していません。講義した内容から書いてください。","",""
"N12007","10/22/14 12:51","BNFでの構文木の書き方を勉強し、算術式を用いて実際に演習した。a(b*c)がa*(b*c)と勝手に解釈してしまったのはとてもいい勉強になった。","感想は次の質問に書いてください。で、もう少し講義内容を書くか、質問を書くこと。","",""
"N12009","","未回答","","",""
"N12010","10/21/14 14:57","拡張BNFでよく使われている書き方は何でしょうか?","特にこれが多いというのは無いと思います。","",""
"N12011","","未回答","","",""
"N12013","","未回答","","",""
"N12016","","未回答","","",""
"N12018","10/21/14 15:38","構文の曖昧性についですが,最終的にできた式が同一のモノであれば問題が内容に思えるのですが違うのですか?構文木の走査法に依存するのでしょうか?","構文木を生成するときの途中経過が何種類かあっても、最終的な構文木が同一であればという質問ですね。実際にそういうケースがあるのかどうかわかりませんが、もしそうならば問題は無さそうですね。","山内研は木曜日はゼミの都合で補講が入るとゼミを途中で抜けることになるので木曜日の補講はできるだけ避けていただきたいです。",""
"N12020","10/21/14 21:59","BNFにおいて構文木では代入文の構文木を作成し、プログラムで書かれた代入文がコンパイラがどう解釈してるかを学びましたが、関数やポインタなどはどうやった解釈しているのですか?","関数の定義も構文解析します。ポインタの記述はたぶん字句解析の段階で認識されると思います。なお「解釈」するのは意味解析のステップです。","",""
"N12022","10/22/14 2:10","BNFから構文木を作る演習をした。問題の式から忠実に作る必要があるため、a(ab)のような式では勝手に掛け算が省略されていると考えてはいけない。他には拡張BNFというものがあり、<a>をAで表す、a+b|aをa[+b]で表すなど表記を短くして情報量を増やすことができる。","OK","",""
"N12025","10/21/14 15:03","曖昧性がある構文木が出た場合コンパイラはどうやって正しい方を選択するのですか?","曖昧な文法規則のままでは、コンパイラが作れません。そこに約束事が追加されるというわけです。","",""
"N12026","10/22/14 10:08","今回の講義では、BNF「Backus-Naur form」と呼ばれる文法のいくつかの規則について学んだ。","何をやったかの羅列では復習にならないからダメです。内容を説明してください。たとえば、構文木と構文図がどう違うのかなど。","",""
"N12027","10/22/14 2:19","授業中にスライドでBNFの例が提示されていましたが、このBNFは誰がどのように作っているのでしょうか?また、どこに記述されていますか?コンパイラでしょうか。","BNFの書き方の一例を示しただけです。構文定義は、その言語を設計した人が作成します。","",""
"N12029","10/22/14 14:29","今回の授業では主にBNFの計算問題の練習を行った。BNFの計算とは問題を文法に従って構文木を書くものであり書いてある通りに忠実に解くものであり、省略などはしてはならない。また、文法も順当に全て書くのではなく拡張BNFを用いて省略して書く方法もある。拡張BNFのオプションにはグループ化、ゼロ回以上の繰り返し、オプション構造を表すこともできる。","OK","補講日の件ですが、木曜日の5限はゼミ活動があるので他の曜日でよろしくお願いします。",""
"N12031","","未回答","","",""
"N12034","10/22/14 14:06","演算子の優先順位が曖昧なままの文法では文の解釈が複数存在して計算結果が異なるため、演算子の結合性(評価順序)と演算子の優先順位(どの演算を先に行うか)を文法で定義しておく必要がある。","曖昧性を避けるためには、構文規則で定義するか、あるいは約束事としてコンパイラに実装するかのどちらかです。","",""
"N12035","10/21/14 20:05","文をBNFを使って文法に従っているか判断し、構文木を作った。BNFは文の最初が記号だったり、曖昧な文は構文木にできない。","2つ目の文章がおかしいです。","",""
"N12036","10/22/14 10:32","BNFとはBackus Naur Formの略で、メタ言語である。BNFの算術式を参考に構文木を書くことができる。算術式の文法に従っていないものは構文木を書くことができず、Syntax Errorとなる。","ちょっと用語が不正確です。
BNFで書かれた算術式の構文定義に従って、例として与えられた式を構文解析し、構文木を描いたわけです。","",""
"N12039","10/21/14 15:30","スライド12ページにあるように、代入文を示す「<id>=<expression>」であるが、すべての言語で「=」記号が代入を示すとは限らないためこの式では代入であるかどうかは表せないので注意が必要である。","OK","",""
"N12041","","未回答","","",""
"N12042","","未回答","","",""
"N12043","","未回答","","",""
"N12045","10/22/14 11:04","コンピュータが扱う言語の文法を定義する際に用いられるメタ言語の一つである。コンピュータ言語の定義はBNFで記述されるのが一般的である。バッカス記法、バッカス・ナウア記法などとも呼ばれる。","書いている内容がちょっと表層的ですね。名前だけでなく、もう少し内容を書いたほうがあなたの復習になりますよ。","",""
"N12046","10/22/14 14:24","構文木はコンピュータの処理手順を学ぶ以外に書くメリットはあるのですか?","さあて思いつきませんね。でも、コンパイラがどうやって解析していくのかを知るのは大事だと思いますよ。","",""
"N12048","10/22/14 4:02","BNFとはメタ言語の一種であり、言語を記述するための言語である。BNFはオートマトンの文脈自由文法の生成規則に従って生成される。このBNFにグループ化や繰り返しなどの拡張機能が追加された言語は拡張BNFと呼ばれる。","BNFが生成される、という表現はおかしいです。言語の構文規則を、BNFというルール（書き方の約束）に従って書くのです。","",""
"N12049","","未回答","","",""
"N12051","","未回答","","",""
"N12053","","未回答","","",""
"N12055","10/21/14 15:21","BNFの機能を拡張したものとして拡張BNFがある。非終端記号の先頭文字は大文字記号から始まる。終端記号は引用符''で囲む。()でグループ化を表わす。{}でゼロ回以上の繰り返しを表わす。[]でオプション構造を表わす。構文規則を図で視覚的に表現したものを構文図という。構文木と名称は似ているが別のものである。","OK","",""
"N12056","10/21/14 15:16","BNFの練習2でやった2番と3番のように、構文木で表現できない式があっても問題ないのですか。","はい。こういう入力に対して、Syntax Errorとして扱うようにコンパイラを作るわけです。","",""
"N12057","10/21/14 23:52","BNFの曖昧さを回避するにはどうしたらいいのですか","BNF自体は、書き方の約束なので、それ自体が曖昧ということはありません。ただし、拡張BNFでいろいろな流儀があるので、出てくるときに、それぞれに説明があるはずです。","",""
"N12058","10/22/14 9:40","EBNFとはBNFの拡張版である。これで書かれた非終端記号の頭は大文字で、記号からなる終端記号は引用符''で囲む。その他には()でグループ化を表し、{}で0回以上の繰り返しを表す。また、[]はオプション構造を表している。","OK","",""
"N12059","10/22/14 11:06","構文木の曖昧性に対する明確な対策は授業で習うもの以外にありますか?","ひょっとすると私の知らない方法があるかもしれませんが、まあそれは知らなくてよいということです。","",""
"N12060","10/21/14 19:52","授業の終盤にした構文木の曖昧性について、A=B+C*Aの構文木を2つ描かれましたが結局どちらが正しかったのでしょうか?","どちらも、与えられた構文規則にのっとっています。","",""
"N12065","10/21/14 15:06","BNFの例3の代入文で引き算がなかったんですが、それは元々の仕様でしょうか?それとも書いてないだけでしょうか?
もう一つ質問があり、拡張BNFの例は7ページの例と少し違いますが、そういうものなんでしょうか?15ページの例とExpressionの右側にExpressionがないので、気になりました。","単なる例ですから、この例には減算を含めていないだけです。
構文規則の例なので、いろいろな構文の定義の形があるということです。同一のものを定義していません。","",""
"N12067","","未回答","","",""
"N12068","10/21/14 17:11","授業内で曖昧な文法(演算子の優先順位など)は避けると仰っていましたが、演算子の優先順位を決めておくなどして無理やり判断させる事は可能なのでしょうか?","実際、そうしています。","",""
"N12069","10/21/14 23:30","構文解析は構文規則に従って、入力された文を解析して導出の過程を明らかにして、構文木を構成する。構文木はコンパイラが式を処理するために作られ、また構文木を入力としてコード生成をする。","OK","",""
"N12070","10/22/14 0:15","BNFの練習問題を行った。構文木を作る目的はコンパイラが処理をするためである。_x000D_
拡張BNFでは()はグループ化、{}は繰り返し、[]はオプションを表すし、構文規則が曖昧であると構文木を複数作ることができる。","OK","BNFの練習2で、黒板に描いた⑤の問題の解答が間違っていたように思われます。","授業中に指摘いただいて、修正したやつですね。修正後でもまだ間違っていましたか？"
"N12073","10/21/14 14:54","コンピュータ内に格納されているデータの構文木や構文図を見る方法はありますか?","構文木を見るツールはあるかもしれませんが、ふつうは無いでしょう。
構文図は人間が見るものですから、教科書・説明書（紙あるいはWebサイト）にだけ現れるものであって、コンピュータ内でプログラムが扱うものではありません。","",""
"N12075","","未回答","","",""
"N12076","10/21/14 15:51","今日やった授業の内容はテストに出ますか?でるとしたらtermやfactorなどの文まで覚えないといけないですか?","構文規則の例を覚える必要はありません。試験での問題は、「こういう構文規則だったらどうなるか」といった形になります。","",""
"N12077","","未回答","","",""
"N12079","10/21/14 15:14","今回は主にBNFの練習問題を行いました。言語を記述するための言語であり、構文の記述に用いられる。<>で括られた非終端記号を変換して終端記号のみにすることでその導出過程から構文木を構成できる。これによってデータを連結リストなどのデータ構造で扱いやすくする。","最後の文にある「データを」とは何ですか？","",""
"N12080","10/22/14 23:41","BNF記法を学んでおくと、授業内で説明して頂いた利点の他に役に立つことはありますか。","第5回資料にも書いてありますが、BNFという書き方の規則は、あちこちで使われています。","",""
"N12081","","未回答","","",""
"N12082","10/21/14 15:34","拡張BNFで0回以上の繰り返しを表すものに*と{}の二つを用いていましたが、どちらの方がメジャーに使われていますか?","どちらもふつうに使われています。どちらが多いという情報を知っても仕方ないのでは？","",""
"N12083","10/22/14 8:14","BNFの練習。算術式や代入文を規則に従い構文木の作成をした。規則によっては表示できない算術式や、同じ表示でも意味が異なる曖昧性といった特徴を持つ。また構文規則を図で表した構文図の作成を行った。","何をやったかの羅列では復習にならないからダメです。内容を説明してください。たとえば、構文木と構文図がどう違うのかなど。","",""
"N12085","10/21/14 15:17","BNFの算術式と代入文、構造図をした。算術式と代入文は構文規則に従って、導出の過程を明らかにし構文木を書く構文解析をした。また構文規則が曖昧で構文木が複数存在するものもある。構造図は構文木と違い構文規則を図にしたものである。","構造図→構文図","",""
"N12086","10/21/14 15:00","A++などのプラグラムコードはどのように字句解析されてるのでしょうか","C言語であれば、Aが識別子、++が演算子。","",""
"N12087","10/21/14 17:01","拡張BNFは色々な流儀で色々な書き方が存在すると講義中に学びましたが、やはり一般に広く知れ渡っている書き方が存在すると思います。そこで、拡張BNFの書き方は大きく分けて何系統の書き方が存在するのでしょうか?","数えたことが無いのでわかりません。それぞれの構文規則が書かれているところ（たぶんその直前）に、どういう流儀で書いているという説明があるはずです。何系統あるかを知っても仕方ないことです。","",""
"N12088","10/21/14 15:14","今日の講義では、BNFの構文解析についての練習問題を行った。提示された構文規則にしたがって、式を導出するというものだった。練習問題は算術式と代入文について行い、式を導出する際に複数のパターンが出てきてしまうという構文規則のあいまい性についても学習を行った。","何をやったかの羅列では復習にならないからダメです。内容を説明してください。たとえば、構文木と構文図がどう違うのかなど。","",""
"N12089","","未回答","","",""
"N12090","10/21/14 21:42","BNFとは言語を記述するための言語であり、構文定義には形式文法と深い関わりがある。例として、一般的な算術式をBNFで表現するには11通りの規則が必要である。代入文は、6通りの規則によって表現できるが、式の意味に曖昧さが残ってしまう。","BNFで書いた構文規則は、単なる例であって、いくつの規則で書かれたかは覚える必要のないことです。","",""
"N12095","","未回答","","",""
"N12096","10/21/14 20:12","構文図は構文規則を視覚的に表現したものですが,構文図がよく使われているものは何ですか?フローチャートとは違う感じがして,理解しにくかったです.","そうですか。C言語の教科書でも、構文図を使って説明されているものがありますよ。たとえば、「明解C言語入門編」をごらんください。次回の授業でもとりあげます。","",""
"N12097","10/21/14 15:12","BNFで定義された文法に従ってトークン列の構文解析が行われる。この時メモリ上に構文木を作成するが、文の書き方によっては演算の順番が曖昧になり、木の構造が一意に定まらない。","演算の順番が曖昧になるのは、文の書き方が悪いのではなくて、構文定義が曖昧だからです。ここは大事なポイントです。","",""
